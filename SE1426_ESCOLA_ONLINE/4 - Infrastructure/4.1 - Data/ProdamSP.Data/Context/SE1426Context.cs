// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

using ProdamSP.Domain.Entities;
#nullable disable

namespace ProdamSP.Data.Context
{
    public partial class SE1426Context : DbContext
    {
        public SE1426Context()
        {
        }

        public SE1426Context(DbContextOptions<SE1426Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Aluno> Aluno { get; set; }
        public virtual DbSet<Aplicacao> Aplicacao { get; set; }
        public virtual DbSet<DispositivoComunicacaoAluno> DispositivoComunicacaoAluno { get; set; }
        public virtual DbSet<DispositivoComunicacaoResponsavel> DispositivoComunicacaoResponsavel { get; set; }
        public virtual DbSet<Endereco> Endereco { get; set; }
        public virtual DbSet<OrigemLocalAlteracao> OrigemLocalAlteracao { get; set; }
        public virtual DbSet<ResponsavelAluno> ResponsavelAluno { get; set; }
        public virtual DbSet<ResponsavelCns> ResponsavelCns { get; set; }
        public virtual DbSet<ResponsavelGeral> ResponsavelGeral { get; set; }
        public virtual DbSet<ResponsavelGeralAluno> ResponsavelGeralAluno { get; set; }
        public virtual DbSet<SolicitacaoMatricula> SolicitacaoMatricula { get; set; }
        public virtual DbSet<SolicitacaoMatriculaPreNatal> SolicitacaoMatriculaPreNatal { get; set; }
        public virtual DbSet<TipoDocumentoEstrangeiro> TipoDocumentoEstrangeiro { get; set; }
        public virtual DbSet<TipoLogradouro> TipoLogradouro { get; set; }
        public virtual DbSet<TipoPessoaResponsavel> TipoPessoaResponsavel { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AI");

            modelBuilder.Entity<Aluno>(entity =>
            {
                entity.HasKey(e => e.CdAluno);

                entity.ToTable("aluno");

                entity.HasIndex(e => e.NrRegistroEstado, "IE17_aluno");

                entity.HasIndex(e => e.NrRgAluno, "IX10_aluno")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => new { e.NrRgAluno, e.CdDigitoRgAluno, e.CdOrgaoEmissor, e.SgUfRgAluno, e.DtEmissaoRg }, "IX12_aluno");

                entity.HasIndex(e => new { e.CdInepAluno, e.CdAluno }, "IX13_aluno");

                entity.HasIndex(e => e.NmAluno, "IX14_aluno");

                entity.HasIndex(e => e.NmMaeAluno, "IX15_aluno");

                entity.HasIndex(e => e.NmPaiAluno, "IX16_aluno");

                entity.HasIndex(e => new { e.NrRegistroEstado, e.CdDigitoRegistroEstado, e.SgUfRegistroAlunoEstado }, "IX18_aluno")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.CdIdentificacaoSocial, "IX19_aluno")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.CdMunicipioCertidao, "IX1_aluno")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => e.CdCpfAluno, "IX9_aluno")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => new { e.NrRegistroEstado, e.SgUfRegistroAlunoEstado }, "in1");

                entity.HasIndex(e => e.CdAlunoPrincipal, "ix11_aluno");

                entity.HasIndex(e => new { e.CdIdentificacaoSocial, e.CdAlunoPrincipal }, "ix2_aluno")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.NmSocialAluno, "missing_index_7210925")
                    .HasFillFactor((byte)95);

                entity.Property(e => e.CdAluno).HasColumnName("cd_aluno");

                entity.Property(e => e.CdAlunoPrincipal).HasColumnName("cd_aluno_principal");

                entity.Property(e => e.CdCartorioCertidao).HasColumnName("cd_cartorio_certidao");

                entity.Property(e => e.CdCpfAluno).HasColumnName("cd_cpf_aluno");

                entity.Property(e => e.CdDigitoRegistroEstado)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_digito_registro_estado")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDigitoRgAluno)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_digito_rg_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDistritoCartorioCertidao).HasColumnName("cd_distrito_cartorio_certidao");

                entity.Property(e => e.CdIdentificacaoSocial)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("cd_identificacao_social")
                    .IsFixedLength(true);

                entity.Property(e => e.CdInepAluno)
                    .HasColumnType("decimal(12, 0)")
                    .HasColumnName("cd_inep_aluno");

                entity.Property(e => e.CdMatriculaCertidaoAluno)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("cd_matricula_certidao_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.CdMunicipioCertidao).HasColumnName("cd_municipio_certidao");

                entity.Property(e => e.CdMunicipioNascimento).HasColumnName("cd_municipio_nascimento");

                entity.Property(e => e.CdNacionalidadeAluno)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_nacionalidade_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.CdNacionalidadeMae)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_nacionalidade_mae")
                    .IsFixedLength(true);

                entity.Property(e => e.CdNacionalidadePai)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_nacionalidade_pai")
                    .IsFixedLength(true);

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdOrgaoEmissor).HasColumnName("cd_orgao_emissor");

                entity.Property(e => e.CdPaisMec).HasColumnName("cd_pais_mec");

                entity.Property(e => e.CdPaisOrigemMae).HasColumnName("cd_pais_origem_mae");

                entity.Property(e => e.CdPaisOrigemPai).HasColumnName("cd_pais_origem_pai");

                entity.Property(e => e.CdSexoAluno)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_sexo_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.CdSexoMae)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_sexo_mae")
                    .IsFixedLength(true);

                entity.Property(e => e.CdSexoPai)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_sexo_pai")
                    .IsFixedLength(true);

                entity.Property(e => e.CdTipoSigilo).HasColumnName("cd_tipo_sigilo");

                entity.Property(e => e.DtAtualizacaoRegistroEstado)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_registro_estado");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtEmissaoCertidao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_emissao_certidao");

                entity.Property(e => e.DtEmissaoRg)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_emissao_rg");

                entity.Property(e => e.DtEntradaPais)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("dt_entrada_pais");

                entity.Property(e => e.DtExclusao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_exclusao");

                entity.Property(e => e.DtFalecimentoAluno)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_falecimento_aluno");

                entity.Property(e => e.DtInclusaoCadastro)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inclusao_cadastro");

                entity.Property(e => e.DtNascimentoAluno)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_nascimento_aluno");

                entity.Property(e => e.InAutorizacaoGeracaoCpf)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_autorizacao_geracao_cpf")
                    .IsFixedLength(true);

                entity.Property(e => e.InCertidaoAlunoConfere)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_certidao_aluno_confere")
                    .IsFixedLength(true);

                entity.Property(e => e.InConstaPaiDocumento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_consta_pai_documento")
                    .IsFixedLength(true);

                entity.Property(e => e.InCpfValidadoReceitaFederal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_cpf_validado_receita_federal")
                    .IsFixedLength(true);

                entity.Property(e => e.InDocumentoNacionalApresentado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_documento_nacional_apresentado")
                    .IsFixedLength(true);

                entity.Property(e => e.InMaeFalecida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_mae_falecida")
                    .IsFixedLength(true);

                entity.Property(e => e.InPaiFalecido)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_pai_falecido")
                    .IsFixedLength(true);

                entity.Property(e => e.InRgAlunoConfere)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_rg_aluno_confere")
                    .IsFixedLength(true);

                entity.Property(e => e.InRneAlunoConfere)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_rne_aluno_confere")
                    .IsFixedLength(true);

                entity.Property(e => e.NmAluno)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_aluno");

                entity.Property(e => e.NmMaeAluno)
                    .IsRequired()
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_mae_aluno");

                entity.Property(e => e.NmPaiAluno)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_pai_aluno");

                entity.Property(e => e.NmSocialAluno)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_social_aluno");

                entity.Property(e => e.NrCertidaoAluno)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("nr_certidao_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.NrFolhaCertidaoAluno)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nr_folha_certidao_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.NrLivroCertidaoAluno)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("nr_livro_certidao_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.NrRegistroEstado)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_registro_estado");

                entity.Property(e => e.NrRgAluno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_rg_aluno");

                entity.Property(e => e.NrRneAluno)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("nr_rne_aluno");

                entity.Property(e => e.SgUfNascimentoAluno)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sg_uf_nascimento_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.SgUfRegistroAlunoEstado)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sg_uf_registro_aluno_estado")
                    .IsFixedLength(true);

                entity.Property(e => e.SgUfRgAluno)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sg_uf_rg_aluno")
                    .IsFixedLength(true);

                entity.Property(e => e.TpCertidaoAluno).HasColumnName("tp_certidao_aluno");

                entity.Property(e => e.TpRacaCor).HasColumnName("tp_raca_cor");

                entity.Property(e => e.TxDocumentoNacionalNaoApresentado)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("tx_documento_nacional_nao_apresentado");
            });

            modelBuilder.Entity<Aplicacao>(entity =>
            {
                entity.HasKey(e => new { e.CiAplicacao, e.CiSubsistema })
                    .HasName("PK__aplicacao__7E02B4CC");

                entity.ToTable("aplicacao");

                entity.Property(e => e.CiAplicacao)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("ci_aplicacao");

                entity.Property(e => e.CiSubsistema).HasColumnName("ci_subsistema");

                entity.Property(e => e.CdOperador)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.DcAplicacao)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dc_aplicacao");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.NmAplicacao)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("nm_aplicacao");
            });

            modelBuilder.Entity<DispositivoComunicacaoAluno>(entity =>
            {
                entity.HasKey(e => e.CdDispositivoComunicacaoAluno);

                entity.ToTable("dispositivo_comunicacao_aluno");

                entity.HasIndex(e => e.CdAluno, "IX1_dispositivo_comunicacao_aluno")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TpDispositivoComunicacao, "IX2_dispositivo_comunicacao_aluno")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.CdLocalDispositivoComunicacao, e.DtFim }, "IX4_dispositivo_comunicacao_aluno");

                entity.HasIndex(e => new { e.CdAluno, e.DtFim }, "IX5")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.CdDispositivoComunicacaoAluno).HasColumnName("cd_dispositivo_comunicacao_aluno");

                entity.Property(e => e.CdAluno).HasColumnName("cd_aluno");

                entity.Property(e => e.CdDdd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd")
                    .IsFixedLength(true);

                entity.Property(e => e.CdLocalDispositivoComunicacao).HasColumnName("cd_local_dispositivo_comunicacao");

                entity.Property(e => e.CdOperador)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdRamal)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ramal")
                    .IsFixedLength(true);

                entity.Property(e => e.CdTipoTurno).HasColumnName("cd_tipo_turno");

                entity.Property(e => e.DcDispositivo)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dc_dispositivo");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtFim)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.InAutorizaEnvioSms)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_autoriza_envio_sms")
                    .IsFixedLength(true);

                entity.Property(e => e.NmContato)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nm_contato");

                entity.Property(e => e.TpDispositivoComunicacao).HasColumnName("tp_dispositivo_comunicacao");

                entity.Property(e => e.TpResponsavelDispositivoComunicacao)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tp_responsavel_dispositivo_comunicacao")
                    .IsFixedLength(true);

                entity.Property(e => e.TxRelacionamentoContato)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tx_relacionamento_contato");

                entity.HasOne(d => d.CdAlunoNavigation)
                    .WithMany(p => p.DispositivoComunicacaoAluno)
                    .HasForeignKey(d => d.CdAluno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dispositivo_comunicacao_aluno_aluno");
            });

            modelBuilder.Entity<DispositivoComunicacaoResponsavel>(entity =>
            {
                entity.HasKey(e => e.CdDispositivoComunicacaoResponsavel);

                entity.ToTable("dispositivo_comunicacao_responsavel");

                entity.Property(e => e.CdDispositivoComunicacaoResponsavel).HasColumnName("cd_dispositivo_comunicacao_responsavel");

                entity.Property(e => e.CdDddCelularResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd_celular_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDddTelefoneComercialResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd_telefone_comercial_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDddTelefoneFixoResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd_telefone_fixo_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdResponsavelGeral).HasColumnName("cd_responsavel_geral");

                entity.Property(e => e.CdTipoTurnoCelular).HasColumnName("cd_tipo_turno_celular");

                entity.Property(e => e.CdTipoTurnoComercial).HasColumnName("cd_tipo_turno_comercial");

                entity.Property(e => e.CdTipoTurnoFixo).HasColumnName("cd_tipo_turno_fixo");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.InAutorizaEnvioSms)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_autoriza_envio_sms")
                    .IsFixedLength(true);

                entity.Property(e => e.NmEmailResponsavel)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nm_email_responsavel");

                entity.Property(e => e.NrCelularResponsavel)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("nr_celular_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrRamalTelefoneComercialResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nr_ramal_telefone_comercial_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrTelefoneComercialResponsavel)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("nr_telefone_comercial_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrTelefoneFixoResponsavel)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("nr_telefone_fixo_responsavel")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CdResponsavelGeralNavigation)
                    .WithMany(p => p.DispositivoComunicacaoResponsavel)
                    .HasForeignKey(d => d.CdResponsavelGeral)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_dispositivo_comunicacao_responsavelXresponsavel_geral");
            });

            modelBuilder.Entity<Endereco>(entity =>
            {
                entity.HasKey(e => e.CiEndereco);

                entity.ToTable("endereco");

                entity.HasIndex(e => e.CdMunicipio, "IX1_endereco")
                    .HasFillFactor((byte)85);

                entity.HasIndex(e => new { e.CdDistritoMec, e.CdMunicipio }, "IX2_endereco")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => e.CdMicroRegiao, "IX3_endereco")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => e.TpLogradouro, "IX4_endereco")
                    .HasFillFactor((byte)85);

                entity.HasIndex(e => e.SgTituloLogradouro, "IX5_endereco")
                    .HasFillFactor((byte)85);

                entity.HasIndex(e => e.CdCoordenadaGeoX, "IX_endereco_cd_coordenada_geo_x")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.CdCoordenadaGeoX, "missing_index_01")
                    .HasFillFactor((byte)85);

                entity.Property(e => e.CiEndereco).HasColumnName("ci_endereco");

                entity.Property(e => e.CdCaixaPostal)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("cd_caixa_postal");

                entity.Property(e => e.CdCep).HasColumnName("cd_cep");

                entity.Property(e => e.CdCoordenadaGeoX)
                    .HasColumnType("decimal(9, 6)")
                    .HasColumnName("cd_coordenada_geo_x");

                entity.Property(e => e.CdCoordenadaGeoY)
                    .HasColumnType("decimal(9, 6)")
                    .HasColumnName("cd_coordenada_geo_y");

                entity.Property(e => e.CdDistritoMec).HasColumnName("cd_distrito_mec");

                entity.Property(e => e.CdLogradouro).HasColumnName("cd_logradouro");

                entity.Property(e => e.CdMicroRegiao).HasColumnName("cd_micro_regiao");

                entity.Property(e => e.CdMunicipio).HasColumnName("cd_municipio");

                entity.Property(e => e.CdNrEndereco)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cd_nr_endereco")
                    .IsFixedLength(true);

                entity.Property(e => e.CdOperador)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdSqlEndereco).HasColumnName("cd_sql_endereco");

                entity.Property(e => e.CdSubPrefeitura).HasColumnName("cd_sub_prefeitura");

                entity.Property(e => e.DcComplementoEndereco)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dc_complemento_endereco");

                entity.Property(e => e.DcPontoReferencia)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("dc_ponto_referencia");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.NmBairro)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("nm_bairro");

                entity.Property(e => e.NmLogradouro)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("nm_logradouro");

                entity.Property(e => e.SgTituloLogradouro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("sg_titulo_logradouro");

                entity.Property(e => e.TpLocalizacaoEndereco)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tp_localizacao_endereco")
                    .IsFixedLength(true);

                entity.Property(e => e.TpLogradouro).HasColumnName("tp_logradouro");

                entity.HasOne(d => d.TpLogradouroNavigation)
                    .WithMany(p => p.Endereco)
                    .HasForeignKey(d => d.TpLogradouro)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_endereco_tipo_logradouro");
            });

            modelBuilder.Entity<OrigemLocalAlteracao>(entity =>
            {
                entity.HasKey(e => e.CdOrigemLocalAlteracao);

                entity.ToTable("origem_local_alteracao");

                entity.Property(e => e.CdOrigemLocalAlteracao).HasColumnName("cd_origem_local_alteracao");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.DcOrigemLocalAlteracao)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dc_origem_local_alteracao")
                    .IsFixedLength(true);

                entity.Property(e => e.DtAtualizacaoOperador)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_operador");
            });

            modelBuilder.Entity<ResponsavelAluno>(entity =>
            {
                entity.HasKey(e => e.CdIdentificadorResponsavel);

                entity.ToTable("responsavel_aluno");

                entity.HasIndex(e => e.CdAluno, "ix1_responsavel_aluno");

                entity.Property(e => e.CdIdentificadorResponsavel).HasColumnName("cd_identificador_responsavel");

                entity.Property(e => e.CdAluno).HasColumnName("cd_aluno");

                entity.Property(e => e.CdCpfResponsavel)
                    .HasColumnType("decimal(11, 0)")
                    .HasColumnName("cd_cpf_responsavel");

                entity.Property(e => e.CdDddCelularResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd_celular_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDddTelefoneComercialResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd_telefone_comercial_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDddTelefoneFixoResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_ddd_telefone_fixo_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdDigitoRgResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_digito_rg_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdEnderecoComercial).HasColumnName("cd_endereco_comercial");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdOperadorMigracao)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador_migracao")
                    .IsFixedLength(true);

                entity.Property(e => e.CdResponsavelGeral).HasColumnName("cd_responsavel_geral");

                entity.Property(e => e.CdResponsavelGeralAluno).HasColumnName("cd_responsavel_geral_aluno");

                entity.Property(e => e.CdSituacaoDocumentoResponsavel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_situacao_documento_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdTipoDocumentoEstrangeiro).HasColumnName("cd_tipo_documento_estrangeiro");

                entity.Property(e => e.CdTipoTurnoCelular).HasColumnName("cd_tipo_turno_celular");

                entity.Property(e => e.CdTipoTurnoComercial).HasColumnName("cd_tipo_turno_comercial");

                entity.Property(e => e.CdTipoTurnoFixo).HasColumnName("cd_tipo_turno_fixo");

                entity.Property(e => e.CiEndereco).HasColumnName("ci_endereco");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtFim)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim");

                entity.Property(e => e.DtInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio");

                entity.Property(e => e.DtMigracao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_migracao");

                entity.Property(e => e.DtNascimentoMaeResponsavel)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_nascimento_mae_responsavel");

                entity.Property(e => e.EmailResponsavel)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("email_responsavel");

                entity.Property(e => e.InAutorizaEnvioSms)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_autoriza_envio_sms")
                    .IsFixedLength(true);

                entity.Property(e => e.InCpfResponsavelConfere)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_cpf_responsavel_confere")
                    .IsFixedLength(true);

                entity.Property(e => e.InRegistroMigrado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_registro_migrado")
                    .HasDefaultValueSql("('N')")
                    .IsFixedLength(true);

                entity.Property(e => e.NmMaeResponsavel)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_mae_responsavel");

                entity.Property(e => e.NmResponsavel)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrCelularResponsavel)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("nr_celular_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrDocumentoEstrangeiro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nr_documento_estrangeiro");

                entity.Property(e => e.NrRamalTelefoneComercialResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("nr_ramal_telefone_comercial_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrRgResponsavel)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_rg_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrTelefoneComercialResponsavel)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("nr_telefone_comercial_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.NrTelefoneFixoResponsavel)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("nr_telefone_fixo_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.SgUfRgResponsavel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sg_uf_rg_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.TpPessoaResponsavel)
                    .HasColumnType("decimal(1, 0)")
                    .HasColumnName("tp_pessoa_responsavel");

                entity.Property(e => e.TpSelecaoMigracaoSme)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tp_selecao_migracao_sme")
                    .IsFixedLength(true);

                entity.Property(e => e.TpSelecaoResponsavelAluno)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tp_selecao_responsavel_aluno")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CdAlunoNavigation)
                    .WithMany(p => p.ResponsavelAluno)
                    .HasForeignKey(d => d.CdAluno)
                    .HasConstraintName("FK_responsavel_alunoXaluno");

                entity.HasOne(d => d.CdEnderecoComercialNavigation)
                    .WithMany(p => p.ResponsavelAlunoCdEnderecoComercialNavigation)
                    .HasForeignKey(d => d.CdEnderecoComercial)
                    .HasConstraintName("FK2_responsavel_alunoXendereco");

                entity.HasOne(d => d.CiEnderecoNavigation)
                    .WithMany(p => p.ResponsavelAlunoCiEnderecoNavigation)
                    .HasForeignKey(d => d.CiEndereco)
                    .HasConstraintName("FK_responsavel_alunoXendereco");
            });

            modelBuilder.Entity<ResponsavelCns>(entity =>
            {
                entity.HasKey(e => e.NrCnsResponsavel);

                entity.ToTable("responsavel_cns");

                entity.Property(e => e.NrCnsResponsavel)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_cns_responsavel");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdResponsavelGeral).HasColumnName("cd_responsavel_geral");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.HasOne(d => d.CdResponsavelGeralNavigation)
                    .WithMany(p => p.ResponsavelCns)
                    .HasForeignKey(d => d.CdResponsavelGeral)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_responsavel_cnsXresponsavel_geral");
            });

            modelBuilder.Entity<ResponsavelGeral>(entity =>
            {
                entity.HasKey(e => e.CdResponsavelGeral);

                entity.ToTable("responsavel_geral");

                entity.Property(e => e.CdResponsavelGeral).HasColumnName("cd_responsavel_geral");

                entity.Property(e => e.CdCpfResponsavel)
                    .HasColumnType("decimal(11, 0)")
                    .HasColumnName("cd_cpf_responsavel");

                entity.Property(e => e.CdDigitoRgResponsavel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("cd_digito_rg_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdEndereco).HasColumnName("cd_endereco");

                entity.Property(e => e.CdEnderecoComercial).HasColumnName("cd_endereco_comercial");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdSituacaoDocumentoResponsavel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("cd_situacao_documento_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.CdTipoDocumentoEstrangeiro).HasColumnName("cd_tipo_documento_estrangeiro");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtNascimentoMaeResponsavel)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_nascimento_mae_responsavel");

                entity.Property(e => e.InCpfResponsavelConferido)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("in_cpf_responsavel_conferido")
                    .IsFixedLength(true);

                entity.Property(e => e.NmMaeResponsavel)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_mae_responsavel");

                entity.Property(e => e.NmResponsavel)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("nm_responsavel");

                entity.Property(e => e.NrDocumentoEstrangeiro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nr_documento_estrangeiro");

                entity.Property(e => e.NrRgResponsavel)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_rg_responsavel");

                entity.Property(e => e.SgUfRgResponsavel)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("sg_uf_rg_responsavel")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CdEnderecoNavigation)
                    .WithMany(p => p.ResponsavelGeralCdEnderecoNavigation)
                    .HasForeignKey(d => d.CdEndereco)
                    .HasConstraintName("FK1_responsavel_geralXendereco");

                entity.HasOne(d => d.CdEnderecoComercialNavigation)
                    .WithMany(p => p.ResponsavelGeralCdEnderecoComercialNavigation)
                    .HasForeignKey(d => d.CdEnderecoComercial)
                    .HasConstraintName("FK2_responsavel_geralXendereco");

                entity.HasOne(d => d.CdTipoDocumentoEstrangeiroNavigation)
                    .WithMany(p => p.ResponsavelGeral)
                    .HasForeignKey(d => d.CdTipoDocumentoEstrangeiro)
                    .HasConstraintName("FK1_responsavel_geralXtipo_documento_estrangeiro");
            });

            modelBuilder.Entity<ResponsavelGeralAluno>(entity =>
            {
                entity.HasKey(e => e.CdResponsavelGeralAluno);

                entity.ToTable("responsavel_geral_aluno");

                entity.HasIndex(e => e.CdAluno, "IX1_responsavel_geral_aluno")
                    .HasFillFactor((byte)90);

                entity.Property(e => e.CdResponsavelGeralAluno).HasColumnName("cd_responsavel_geral_aluno");

                entity.Property(e => e.CdAluno).HasColumnName("cd_aluno");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdResponsavelGeral).HasColumnName("cd_responsavel_geral");

                entity.Property(e => e.CdTipoPessoaResponsavel).HasColumnName("cd_tipo_pessoa_responsavel");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtFimPeriodoResponsavel)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_fim_periodo_responsavel");

                entity.Property(e => e.DtInicioPeriodoResponsavel)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio_periodo_responsavel");

                entity.HasOne(d => d.CdAlunoNavigation)
                    .WithMany(p => p.ResponsavelGeralAluno)
                    .HasForeignKey(d => d.CdAluno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_responsavel_geral_alunoXaluno");

                entity.HasOne(d => d.CdResponsavelGeralNavigation)
                    .WithMany(p => p.ResponsavelGeralAluno)
                    .HasForeignKey(d => d.CdResponsavelGeral)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_responsavel_geral_alunoXresponsavel_geral");

                entity.HasOne(d => d.CdTipoPessoaResponsavelNavigation)
                    .WithMany(p => p.ResponsavelGeralAluno)
                    .HasForeignKey(d => d.CdTipoPessoaResponsavel)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_responsavel_geral_alunoXtipo_pessoa_responsavel");
            });

            modelBuilder.Entity<SolicitacaoMatricula>(entity =>
            {
                entity.HasKey(e => e.CdSolicitacaoMatricula);

                entity.ToTable("solicitacao_matricula");

                entity.HasIndex(e => e.CiTipoEnderecoBase, "IX10_solicitacao_matricula")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => e.StSolicitacao, "IX11_solicitacao_matricula")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => e.TpOrigem, "IX1_solicitacao_matricula");

                entity.HasIndex(e => e.StSolicitacao, "IX2_solicitacao_matricula");

                entity.HasIndex(e => e.DtStatusSolicitacao, "IX3_solicitacao_matricula");

                entity.HasIndex(e => e.CdAluno, "IX4_solicitacao_matricula");

                entity.HasIndex(e => e.CdSerieEnsino, "IX5_solicitacao_matricula");

                entity.HasIndex(e => e.CdMicroRegiao, "IX6_solicitacao_matricula");

                entity.HasIndex(e => new { e.CdUnidadeEducacao, e.StSolicitacao }, "IX8_solicitacao_matricula");

                entity.HasIndex(e => e.CdEnderecoBase, "IX9_solicitacao_matricula")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => new { e.TpOrigem, e.StSolicitacao, e.AnLetivo }, "IX_solicitacao_matricula_tp_origem_st_solicitacao_an_letivo")
                    .HasFillFactor((byte)90);

                entity.HasIndex(e => new { e.CdUnidadeEducacao, e.StSolicitacao, e.TpOrigem }, "missing_index_10017654")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => new { e.CdUnidadeEducacao, e.StSolicitacao, e.AnLetivo, e.CdSerieEnsinoComposicao }, "missing_index_10018888")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => new { e.CdUnidadeEducacao, e.TpOrigem, e.StSolicitacao }, "missing_index_10021493")
                    .HasFillFactor((byte)95);

                entity.HasIndex(e => new { e.StSolicitacao, e.CdSerieEnsino }, "missing_index_11055046")
                    .HasFillFactor((byte)95);

                entity.Property(e => e.CdSolicitacaoMatricula).HasColumnName("cd_solicitacao_matricula");

                entity.Property(e => e.AnLetivo).HasColumnName("an_letivo");

                entity.Property(e => e.CdAluno).HasColumnName("cd_aluno");

                entity.Property(e => e.CdCicloEnsino).HasColumnName("cd_ciclo_ensino");

                entity.Property(e => e.CdEnderecoBase).HasColumnName("cd_endereco_base");

                entity.Property(e => e.CdEnderecoOpcional).HasColumnName("cd_endereco_opcional");

                entity.Property(e => e.CdEtapaEnsino).HasColumnName("cd_etapa_ensino");

                entity.Property(e => e.CdMicroRegiao).HasColumnName("cd_micro_regiao");

                entity.Property(e => e.CdModalidadeEnsino).HasColumnName("cd_modalidade_ensino");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdSerieEnsino).HasColumnName("cd_serie_ensino");

                entity.Property(e => e.CdSerieEnsinoComposicao).HasColumnName("cd_serie_ensino_composicao");

                entity.Property(e => e.CdTipoMotivoRecusaMatricula).HasColumnName("cd_tipo_motivo_recusa_matricula");

                entity.Property(e => e.CdTipoPrograma).HasColumnName("cd_tipo_programa");

                entity.Property(e => e.CdUnidadeEducacao)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("cd_unidade_educacao")
                    .IsFixedLength(true);

                entity.Property(e => e.CiTipoEnderecoBase).HasColumnName("ci_tipo_endereco_base");

                entity.Property(e => e.DcObservacaoStatus)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("dc_observacao_status");

                entity.Property(e => e.DtAtlzTab)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atlz_tab")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DtEnderecoBase)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_endereco_base");

                entity.Property(e => e.DtEnderecoOpcional)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_endereco_opcional");

                entity.Property(e => e.DtInscricao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inscricao");

                entity.Property(e => e.DtProtocoloDesistenciaMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_protocolo_desistencia_matricula");

                entity.Property(e => e.DtStatusSolicitacao)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_status_solicitacao")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.StSolicitacao)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("st_solicitacao")
                    .IsFixedLength(true);

                entity.Property(e => e.TpOrigem)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tp_origem")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CdAlunoNavigation)
                    .WithMany(p => p.SolicitacaoMatricula)
                    .HasForeignKey(d => d.CdAluno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_solicitacao_matriculaXaluno");

                entity.HasOne(d => d.CdEnderecoBaseNavigation)
                    .WithMany(p => p.SolicitacaoMatriculaCdEnderecoBaseNavigation)
                    .HasForeignKey(d => d.CdEnderecoBase)
                    .HasConstraintName("FK1_solicitacao_matriculaXendereco");

                entity.HasOne(d => d.CdEnderecoOpcionalNavigation)
                    .WithMany(p => p.SolicitacaoMatriculaCdEnderecoOpcionalNavigation)
                    .HasForeignKey(d => d.CdEnderecoOpcional)
                    .HasConstraintName("FK2_solicitacao_matriculaXendereco");
            });

            modelBuilder.Entity<SolicitacaoMatriculaPreNatal>(entity =>
            {
                entity.HasKey(e => e.CdSolicitacaoMatriculaPreNatal);

                entity.ToTable("solicitacao_matricula_pre_natal");

                entity.Property(e => e.CdSolicitacaoMatriculaPreNatal).HasColumnName("cd_solicitacao_matricula_pre_natal");

                entity.Property(e => e.CdMotivoCancelamentoInscricao).HasColumnName("cd_motivo_cancelamento_inscricao");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.CdOrigemLocalAlteracao).HasColumnName("cd_origem_local_alteracao");

                entity.Property(e => e.CdSolicitacaoMatricula).HasColumnName("cd_solicitacao_matricula");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtCancelamentoInscricaoEol)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_cancelamento_inscricao_eol");

                entity.Property(e => e.DtEncaminhamentoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_encaminhamento_matricula");

                entity.Property(e => e.DtExclusaoInscricaoEol)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_exclusao_inscricao_eol");

                entity.Property(e => e.DtInicioPreNatal)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inicio_pre_natal");

                entity.Property(e => e.DtInscricaoEol)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_inscricao_eol");

                entity.Property(e => e.DtIntencaoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_intencao_matricula");

                entity.Property(e => e.DtNascimentoPrevista)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_nascimento_prevista");

                entity.Property(e => e.DtSolicitacaoMatricula)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_solicitacao_matricula");

                entity.Property(e => e.DtTransformacaoCandidato)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_transformacao_candidato");

                entity.Property(e => e.DtUltimaConsultaGestante)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_ultima_consulta_gestante");

                entity.Property(e => e.NrCnsCrianca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_cns_crianca");

                entity.Property(e => e.NrCnsResponsavel)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_cns_responsavel");

                entity.Property(e => e.NrPreNatal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("nr_pre_natal");

                entity.HasOne(d => d.CdOrigemLocalAlteracaoNavigation)
                    .WithMany(p => p.SolicitacaoMatriculaPreNatal)
                    .HasForeignKey(d => d.CdOrigemLocalAlteracao)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_solicitacao_matricula_pre_natalXorigem_local_alteracao");

                entity.HasOne(d => d.CdSolicitacaoMatriculaNavigation)
                    .WithMany(p => p.SolicitacaoMatriculaPreNatal)
                    .HasForeignKey(d => d.CdSolicitacaoMatricula)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_solicitacao_matricula_pre_natalXsolicitacao_matricula");

                entity.HasOne(d => d.NrCnsResponsavelNavigation)
                    .WithMany(p => p.SolicitacaoMatriculaPreNatal)
                    .HasForeignKey(d => d.NrCnsResponsavel)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK1_solicitacao_matricula_pre_natalXresponsavel_cns");
            });

            modelBuilder.Entity<TipoDocumentoEstrangeiro>(entity =>
            {
                entity.HasKey(e => e.CdTipoDocumentoEstrangeiro);

                entity.ToTable("tipo_documento_estrangeiro");

                entity.Property(e => e.CdTipoDocumentoEstrangeiro)
                    .ValueGeneratedNever()
                    .HasColumnName("cd_tipo_documento_estrangeiro");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.DcTipoDocumentoEstrangeiro)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dc_tipo_documento_estrangeiro");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");
            });

            modelBuilder.Entity<TipoLogradouro>(entity =>
            {
                entity.HasKey(e => e.TpLogradouro);

                entity.ToTable("tipo_logradouro");

                entity.Property(e => e.TpLogradouro)
                    .ValueGeneratedNever()
                    .HasColumnName("tp_logradouro");

                entity.Property(e => e.CdOperador)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.DcTpLogradouro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dc_tp_logradouro");

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");

                entity.Property(e => e.DtCancelamento)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("dt_cancelamento");

                entity.Property(e => e.NrOrdemLogradouro)
                    .HasColumnType("decimal(4, 0)")
                    .HasColumnName("nr_ordem_logradouro")
                    .HasDefaultValueSql("((999))");
            });

            modelBuilder.Entity<TipoPessoaResponsavel>(entity =>
            {
                entity.HasKey(e => e.CdTipoPessoaResponsavel);

                entity.ToTable("tipo_pessoa_responsavel");

                entity.Property(e => e.CdTipoPessoaResponsavel).HasColumnName("cd_tipo_pessoa_responsavel");

                entity.Property(e => e.CdOperador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("cd_operador")
                    .IsFixedLength(true);

                entity.Property(e => e.DcTipoPessoaResponsavel)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("dc_tipo_pessoa_responsavel")
                    .IsFixedLength(true);

                entity.Property(e => e.DtAtualizacaoTabela)
                    .HasColumnType("datetime")
                    .HasColumnName("dt_atualizacao_tabela");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}